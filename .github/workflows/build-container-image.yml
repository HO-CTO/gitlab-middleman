name: 'build-container-image'

on:
  workflow_call:
    inputs:
      imageRegistry:
        required: true
        type: string
      imageName:
        required: true
        type: string
      imageBuildContext:
        required: true
        type: string
      repositoryName:
        required: true
        type: string
      user:
        required: true
        type: string
      tag:
        required: true
        type: string
        description: 'The tag to use for the docker image'
      tag_latest:
        default: false
        required: false
        type: string
        description: 'Should tag latest on the docker image'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.8.0
      - name: Echo meta tags
        run: echo " ${{ inputs.imageRegistry }}/${{ inputs.imageName }} " 
      - name: Calculate metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ inputs.imageRegistry }}/${{ inputs.imageName }}
          tags: |
            type=raw,value=${{ inputs.tag }}
            type=raw,value=latest,enable=${{ inputs.tag_latest || false }}
      - name: Build container
        uses: docker/build-push-action@v4.1.1
        with:
          context: ${{ inputs.imageBuildContext }}
          file:  ${{ inputs.imageBuildContext }}/Dockerfile
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            PACKAGE_TOKEN=${{ secrets.GITHUB_TOKEN }}
            VERSION=${{needs.calculate-semver.outputs.version}}
          outputs: type=docker,dest=/tmp/${{ inputs.repositoryName }}.tar
      - name: Upload artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ${{ inputs.repositoryName }}
          path: /tmp/${{ inputs.repositoryName }}.tar
